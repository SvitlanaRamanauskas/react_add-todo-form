{"version":3,"sources":["api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.ts","components/TodoForm/TodoForm.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","UserInfo","user","className","href","email","name","TodoInfo","todo","TodoList","todos","map","username","getUserById","userFromTodoId","usersFromServer","find","TodoForm","onSubmit","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","reset","action","method","event","preventDefault","onReset","htmlFor","type","placeholder","value","onChange","target","App","todosInclUser","todosFromServer","todoItems","setTodoItems","data","newTodo","Math","max","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dba23484.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/user';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article data-id={todo.id} className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userFromTodoId: number) {\n  return usersFromServer.find(user => user.id === userFromTodoId) || null;\n}\n","import { useState } from 'react';\nimport { Todo } from '../../types/todo';\n\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setHasTitleError(true);\n    }\n\n    if (!userId) {\n      setHasUserIdError(true);\n    }\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId: 0,\n      user: getUserById(+userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n      onReset={reset}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"todo-title\">Title:</label>\n        <input\n          id=\"todo-title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"todo-userIdSelect\">User:</label>\n        <select\n          id=\"todo-userIdSelect\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\">Choose a user</option>\n\n          {usersFromServer.map((user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          )))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\nimport { Todo } from './types/todo';\nimport { getUserById } from './services/user';\n\nexport const App = () => {\n  const todosInclUser = todosFromServer.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\n  const [todoItems, setTodoItems] = useState<Todo[]>(todosInclUser);\n\n  function getMaxTodoId(todos: Todo[]) {\n    const maxId = Math.max(\n      ...todos.map(todo => todo.id),\n    );\n\n    return maxId + 1;\n  }\n\n  const addTodo = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: getMaxTodoId(todoItems),\n      ...data,\n    };\n\n    setTodoItems(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n\n      <TodoList todos={todoItems} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}